{"version":3,"sources":["app.js","contact-detail.js","contact-list.js","environment.js","main.js","messages.js","no-selection.js","utility.js","web-api.js","resources/index.js","resources/elements/loading-indicator.js"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","name","ContactDetail","ea","activate","params","routeConfig","getContactDetails","id","then","contact","navModel","setTitle","firstName","originalContact","JSON","parse","stringify","publish","save","saveContact","canDeactivate","result","confirm","lastName","isRequesting","ContactList","subscribe","select","msg","found","contacts","find","x","Object","assign","created","getContactList","selectedId","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ContactUpdated","ContactViewed","NoSelection","message","areEqual","obj1","obj2","keys","every","key","hasOwnProperty","latency","getId","email","phoneNumber","WebAPI","Promise","setTimeout","results","resolve","filter","instance","index","indexOf","push","globalResources","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {WebAPI} from './web-api';\n\nexport class App {\n  static inject(){return [WebAPI];}\n\n  constructor(api){\n    this.api = api;\n  }\n\n  configureRouter(config,router){\n    config.title = 'Contact';\n    config.map([\n      {route:'',moduleId:'no-selection',title:'Select'},\n      {route:'contacts/:id',moduleId:'contact-detail',name:'contacts'}\n    ]);\n\n    this.router = router;\n  }\n}\n","import {WebAPI} from './web-api';\nimport {areEqual} from './utility';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ContactUpdated,ContactViewed} from './messages';\n\nexport class ContactDetail{\n\n  static inject(){return [WebAPI,EventAggregator];}\n\n  constructor(api,ea){\n    this.api = api;\n    this.ea = ea;\n  }\n\n  activate(params,routeConfig){\n    this.routeConfig = routeConfig;\n    return this.api.getContactDetails(params.id).then(contact => {\n      this.contact = contact;\n      this.routeConfig.navModel.setTitle(contact.firstName);\n      this.originalContact = JSON.parse(JSON.stringify(contact));\n      this.ea.publish(new ContactViewed(this.contact));\n    })\n  }\n\n  get canSave(){\n    return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\n  }\n\n  save(){\n    this.api.saveContact(this.contact).then(contact => {\n      this.contact = contact;\n      this.routeConfig.navModel.setTitle(contact.firstName);\n      this.originalContact = JSON.parse(JSON.stringify(contact));\n      this.ea.publish(new ContactUpdated(this.contact));\n    })\n  }\n\n  canDeactivate(){\n    if(!areEqual(this.originalContact,this.contact)){\n      let result = confirm('you have unsaved changes. Are you sure you wish to leave?');\n      if(!result){\n        this.ea.publish(new ContactViewed(this.contact))\n      }\n      return result;\n    }\n  }\n}\n","import {WebAPI} from './web-api';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ContactUpdated,ContactViewed} from './messages';\n\nexport class ContactList{\n  static inject() {return [WebAPI,EventAggregator]};\n\n  constructor(api,ea){\n    this.api = api;\n    ea.subscribe(ContactViewed,msg => this.select(msg.contact));\n    ea.subscribe(ContactUpdated, msg => {\n      let id = msg.contact.id;\n      let found = this.contacts.find(x => x.id === id);\n      Object.assign(found,msg.contact);\n    })\n  }\n\n  created(){\n    this.api.getContactList().then(contacts => this.contacts = contacts);\n  }\n\n  select(contact){\n    this.selectedId = contact.id;\n    return true;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated{\n  constructor(contact){\n    this.contact = contact;\n  }\n}\n\nexport class ContactViewed{\n  constructor(contact){\n    this.contact = contact;\n  }\n}\n","export class NoSelection{\n  constructor(){\n    this.message = \"Please Select a Contact.\";\n  }\n}\n","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import * as nprogress from 'nprogress';\nimport {bindable,noView,decorators} from 'aurelia-framework';\n\nexport let LoadingIndicator = decorators(\n  noView(['nprogress/nprogress.css']),\n  bindable({name:'loading',defaultValue:false})\n).on(class{\n  loadingChanged(newValue){\n    if(newValue){\n      nprogress.start();\n    }else{\n      nprogress.done();\n    }\n  }\n});\n"],"sourceRoot":".."}